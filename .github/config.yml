version: 2.1

orbs:
  codecov: codecov/codecov@1.1.1

commands:
  build:
    parameters:
      python_env:
        type: string
        default: py38
    steps:
      - checkout
      - run: sudo chown -R circleci:circleci /usr/local/bin
      - run: sudo chown -R circleci:circleci /usr/local/lib
      - restore_cache:
          keys:
            - deps-{{ .Branch }}-<< parameters.python_env >>-{{ checksum "poetry.lock" }}
            # - deps-clear
      - run:
          name: Install Poetry
          command: |
            pip install poetry
            poetry config virtualenvs.create false
      - run:
          name: Install Dependencies
          command: |
            poetry install --no-interaction
      - save_cache:
          key: deps-{{ .Branch }}-<< parameters.python_env >>-{{ checksum "poetry.lock" }}
          # key: deps-clear
          paths:
            - "~/.cache/pypoetry/virtualenvs"
            - "/usr/local/bin"
            - "/usr/local/lib"

  linting:
    steps:
      - run:
          name: Run flake8
          command: |
            poetry run flake8 .
      - run:
          name: Run black formatting check
          command: |
            poetry run black --diff --check .

  test:
    steps:
      - run:
          name: Running tests
          command: |
            poetry run pytest tests/ -v

executors:
  py36-executor:
    docker:
      - image: circleci/python:3.6
  py37-executor:
    docker:
      - image: circleci/python:3.7
  py38-executor:
    docker:
      - image: circleci/python:3.8

jobs:
  test-with-py36:
    executor: py36-executor
    steps:
      - build:
          python_env: py36
      - linting
      - test
  test-with-py37:
    executor: py37-executor
    steps:
      - build:
          python_env: py37
      - linting
      - test
  test-with-py38:
    executor: py38-executor
    steps:
      - build:
          python_env: py38
      - linting
      - test

  coverage_publish:
    executor: py38-executor
    steps:
      - build
      - run:
          name: Running tests with coverage
          command: |
            poetry run pytest --cov-report=xml --cov=gns3fy tests/
      - codecov/upload:
          file: coverage.xml

workflows:
  py36-test:
    jobs:
      - test-with-py36:
          filters:
            branches:
              ignore:
                - "gh-pages"
  py37-test:
    jobs:
      - test-with-py37:
          filters:
            branches:
              ignore:
                - "gh-pages"
  py38-test:
    jobs:
      - test-with-py38:
          filters:
            branches:
              ignore:
                - "gh-pages"
      - coverage_publish:
          requires:
              - "test-with-py38"
